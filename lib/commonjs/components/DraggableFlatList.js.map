{"version":3,"names":["AnimatedFlatList","Animated","createAnimatedComponent","FlashList","DraggableFlatListInner","props","useRefs","cellDataRef","containerRef","flatlistRef","keyToIndexRef","propsRef","animationConfigRef","useAnimatedValues","activeCellOffset","activeCellSize","activeIndexAnim","containerSize","scrollOffset","scrollViewSize","spacerIndexAnim","horizontalAnim","placeholderOffset","touchTranslate","autoScrollDistance","panGestureState","isTouchActiveNative","viewableIndexMin","viewableIndexMax","disabled","reset","useStableCallback","value","setActiveKey","dragHitSlop","DEFAULT_PROPS","scrollEnabled","activationDistance","activationDistanceProp","useState","activeKey","current","enableLayoutAnimationExperimental","layoutAnimationDisabled","setLayoutAnimationDisabled","keyExtractor","item","index","Error","dataRef","useRef","data","dataHasChanged","map","join","useEffect","setTimeout","useLayoutEffect","forEach","d","i","key","set","drag","get","cellData","measurements","offset","size","onDragBegin","undefined","onContainerLayout","layout","nativeEvent","width","height","horizontal","onListContentSizeChange","w","h","onContentSizeChange","onContainerTouchStart","onContainerTouchEnd","extraData","useMemo","renderItem","useCallback","onRelease","onDragEnd","from","to","newData","splice","onPlaceholderIndexChange","useAnimatedReaction","cur","prev","hasMoved","runOnJS","gestureDisabled","useSharedValue","panGesture","Gesture","Pan","onBegin","evt","state","onUpdate","translation","translationX","translationY","onEnd","springTo","withSpring","onTouchesDown","onTouchesUp","hitSlop","activeOffset","activeOffsetX","activeOffsetY","onScroll","onScrollOffsetChange","scrollHandler","useAnimatedScrollHandler","contentOffset","x","y","useAutoScroll","onViewableItemsChanged","info","viewableIndices","viewableItems","filter","isViewable","min","Math","max","containerStyle","renderPlaceholder","CellRendererComponent","simultaneousHandlers","estimatedItemSize","DraggableFlatList","ref","MemoizedInner","typedMemo","React","forwardRef"],"sources":["DraggableFlatList.tsx"],"sourcesContent":["import React, {\n    useCallback,\n    useEffect,\n    useLayoutEffect,\n    useMemo,\n    useRef,\n    useState,\n} from \"react\";\nimport { LayoutChangeEvent } from \"react-native\";\nimport { Gesture, GestureDetector } from \"react-native-gesture-handler\";\nimport Animated, {\n    runOnJS,\n    useAnimatedReaction,\n    useAnimatedScrollHandler,\n    useSharedValue,\n    withSpring,\n} from \"react-native-reanimated\";\nimport CellRendererComponent from \"./CellRendererComponent\";\nimport { DEFAULT_PROPS, isWeb } from \"../constants\";\nimport PlaceholderItem from \"./PlaceholderItem\";\nimport RowItem from \"./RowItem\";\nimport { DraggableFlatListProps } from \"../types\";\nimport PropsProvider from \"../context/propsContext\";\nimport AnimatedValueProvider, {\n    useAnimatedValues,\n} from \"../context/animatedValueContext\";\nimport RefProvider, { useRefs } from \"../context/refContext\";\nimport DraggableFlatListProvider from \"../context/draggableFlatListContext\";\nimport { useAutoScroll } from \"../hooks/useAutoScroll\";\nimport { useStableCallback } from \"../hooks/useStableCallback\";\nimport ScrollOffsetListener from \"./ScrollOffsetListener\";\nimport { typedMemo } from \"../utils\";\nimport { FlashList, FlashListProps, ListRenderItem } from \"@shopify/flash-list\";\n\ntype RNGHFlatListProps<T> = Animated.AnimateProps<\n    FlashListProps<T> & {\n        ref: React.Ref<FlashList<T>>;\n        simultaneousHandlers?: React.Ref<any> | React.Ref<any>[];\n    }\n>;\n\ntype OnViewableItemsChangedCallback<T> = Exclude<\n    FlashListProps<T>[\"onViewableItemsChanged\"],\n    undefined | null\n>;\n\nconst AnimatedFlatList = (Animated.createAnimatedComponent(\n    FlashList\n) as unknown) as <T>(props: RNGHFlatListProps<T>) => React.ReactElement;\n\nfunction DraggableFlatListInner<T>(props: DraggableFlatListProps<T>) {\n    const {\n        cellDataRef,\n        containerRef,\n        flatlistRef,\n        keyToIndexRef,\n        propsRef,\n        animationConfigRef,\n    } = useRefs<T>();\n    const {\n        activeCellOffset,\n        activeCellSize,\n        activeIndexAnim,\n        containerSize,\n        scrollOffset,\n        scrollViewSize,\n        spacerIndexAnim,\n        horizontalAnim,\n        placeholderOffset,\n        touchTranslate,\n        autoScrollDistance,\n        panGestureState,\n        isTouchActiveNative,\n        viewableIndexMin,\n        viewableIndexMax,\n        disabled,\n    } = useAnimatedValues();\n\n    const reset = useStableCallback(() => {\n        activeIndexAnim.value = -1;\n        spacerIndexAnim.value = -1;\n        touchTranslate.value = 0;\n        activeCellSize.value = -1;\n        activeCellOffset.value = -1;\n        setActiveKey(null);\n    });\n\n    const {\n        dragHitSlop = DEFAULT_PROPS.dragHitSlop,\n        scrollEnabled = DEFAULT_PROPS.scrollEnabled,\n        activationDistance: activationDistanceProp = DEFAULT_PROPS.activationDistance,\n    } = props;\n\n    let [activeKey, setActiveKey] = useState<string | null>(null);\n    const [layoutAnimationDisabled, setLayoutAnimationDisabled] = useState(\n        !propsRef.current.enableLayoutAnimationExperimental\n    );\n\n    const keyExtractor = useStableCallback((item: T, index: number) => {\n        if (!props.keyExtractor) {\n            throw new Error(\n                \"You must provide a keyExtractor to DraggableFlatList\"\n            );\n        }\n        return props.keyExtractor(item, index);\n    });\n\n    const dataRef = useRef(props.data);\n    const dataHasChanged =\n        dataRef.current.map(keyExtractor).join(\"\") !==\n        props.data.map(keyExtractor).join(\"\");\n    dataRef.current = props.data;\n    if (dataHasChanged) {\n        // When data changes make sure `activeKey` is nulled out in the same render pass\n        activeKey = null;\n    }\n\n    useEffect(() => {\n        if (!propsRef.current.enableLayoutAnimationExperimental) return;\n        if (activeKey) {\n            setLayoutAnimationDisabled(true);\n        } else {\n            // setTimeout result of trial-and-error to determine how long to wait before\n            // re-enabling layout animations so that a drag reorder does not trigger it.\n            setTimeout(() => {\n                setLayoutAnimationDisabled(false);\n            }, 100);\n        }\n    }, [activeKey]);\n\n    useLayoutEffect(() => {\n        props.data.forEach((d, i) => {\n            const key = keyExtractor(d, i);\n            keyToIndexRef.current.set(key, i);\n        });\n    }, [props.data, keyExtractor, keyToIndexRef]);\n\n    const drag = useStableCallback((activeKey: string) => {\n        if (disabled.value) return;\n        const index = keyToIndexRef.current.get(activeKey);\n        const cellData = cellDataRef.current.get(activeKey);\n        if (cellData) {\n            activeCellOffset.value = cellData.measurements.offset;\n            activeCellSize.value = cellData.measurements.size;\n        }\n\n        const { onDragBegin } = propsRef.current;\n        if (index !== undefined) {\n            spacerIndexAnim.value = index;\n            activeIndexAnim.value = index;\n            setActiveKey(activeKey);\n            onDragBegin?.(index);\n        }\n    });\n\n    const onContainerLayout = ({\n        nativeEvent: { layout },\n    }: LayoutChangeEvent) => {\n        const { width, height } = layout;\n        containerSize.value = props.horizontal ? width : height;\n        props.onContainerLayout?.({ layout, containerRef });\n    };\n\n    const onListContentSizeChange = (w: number, h: number) => {\n        scrollViewSize.value = props.horizontal ? w : h;\n        props.onContentSizeChange?.(w, h);\n    };\n\n    const onContainerTouchStart = () => {\n        if (!disabled.value) {\n            isTouchActiveNative.value = true;\n        }\n        return false;\n    };\n\n    const onContainerTouchEnd = () => {\n        isTouchActiveNative.value = false;\n    };\n\n    const extraData = useMemo(\n        () => ({\n            activeKey,\n            extraData: props.extraData,\n        }),\n        [activeKey, props.extraData]\n    );\n\n    const renderItem: ListRenderItem<T> = useCallback(\n        ({ item, index }) => {\n            const key = keyExtractor(item, index);\n            if (index !== keyToIndexRef.current.get(key)) {\n                keyToIndexRef.current.set(key, index);\n            }\n\n            return (\n                <RowItem\n                    item={item}\n                    itemKey={key}\n                    renderItem={props.renderItem}\n                    drag={drag}\n                    extraData={props.extraData}\n                />\n            );\n        },\n        [props.renderItem, props.extraData, drag, keyExtractor]\n    );\n\n    const onRelease = useStableCallback((index: number) => {\n        props.onRelease?.(index);\n    });\n\n    const onDragEnd = useStableCallback(\n        ({ from, to }: { from: number; to: number }) => {\n            const { onDragEnd, data } = props;\n\n            const newData = [...data];\n            if (from !== to) {\n                newData.splice(from, 1);\n                newData.splice(to, 0, data[from]);\n            }\n\n            onDragEnd?.({ from, to, data: newData });\n            reset();\n        }\n    );\n\n    const onPlaceholderIndexChange = useStableCallback((index: number) => {\n        props.onPlaceholderIndexChange?.(index);\n    });\n\n    // Handle case where user ends drag without moving their finger.\n    useAnimatedReaction(\n        () => {\n            return isTouchActiveNative.value;\n        },\n        (cur, prev) => {\n            if (cur !== prev && !cur) {\n                const hasMoved = !!touchTranslate.value;\n                if (\n                    !hasMoved &&\n                    activeIndexAnim.value >= 0 &&\n                    !disabled.value\n                ) {\n                    runOnJS(onRelease)(activeIndexAnim.value);\n                    runOnJS(onDragEnd)({\n                        from: activeIndexAnim.value,\n                        to: spacerIndexAnim.value,\n                    });\n                }\n            }\n        },\n        [isTouchActiveNative, onDragEnd, onRelease]\n    );\n\n    useAnimatedReaction(\n        () => {\n            return spacerIndexAnim.value;\n        },\n        (cur, prev) => {\n            if (prev !== null && cur !== prev && cur >= 0 && prev >= 0) {\n                runOnJS(onPlaceholderIndexChange)(cur);\n            }\n        },\n        [spacerIndexAnim]\n    );\n\n    const gestureDisabled = useSharedValue(false);\n\n    const panGesture = Gesture.Pan()\n        .onBegin((evt) => {\n            gestureDisabled.value = disabled.value;\n            if (gestureDisabled.value) return;\n            panGestureState.value = evt.state;\n        })\n        .onUpdate((evt) => {\n            if (gestureDisabled.value) return;\n            panGestureState.value = evt.state;\n            const translation = horizontalAnim.value\n                ? evt.translationX\n                : evt.translationY;\n            touchTranslate.value = translation;\n        })\n        .onEnd((evt) => {\n            if (gestureDisabled.value) return;\n            // Set touch val to current translate val\n            isTouchActiveNative.value = false;\n            const translation = horizontalAnim.value\n                ? evt.translationX\n                : evt.translationY;\n\n            touchTranslate.value = translation + autoScrollDistance.value;\n            panGestureState.value = evt.state;\n\n            // Only call onDragEnd if actually dragging a cell\n            if (activeIndexAnim.value === -1 || disabled.value) return;\n            disabled.value = true;\n            runOnJS(onRelease)(activeIndexAnim.value);\n            const springTo = placeholderOffset.value - activeCellOffset.value;\n            touchTranslate.value = withSpring(\n                springTo,\n                animationConfigRef.current,\n                () => {\n                    runOnJS(onDragEnd)({\n                        from: activeIndexAnim.value,\n                        to: spacerIndexAnim.value,\n                    });\n                    disabled.value = false;\n                }\n            );\n        })\n        .onTouchesDown(() => {\n            runOnJS(onContainerTouchStart)();\n        })\n        .onTouchesUp(() => {\n            // Turning this into a worklet causes timing issues. We want it to run\n            // just after the finger lifts.\n            runOnJS(onContainerTouchEnd)();\n        });\n\n    if (dragHitSlop) panGesture.hitSlop(dragHitSlop);\n    if (activationDistanceProp) {\n        const activeOffset = [-activationDistanceProp, activationDistanceProp];\n        if (props.horizontal) {\n            panGesture.activeOffsetX(activeOffset);\n        } else {\n            panGesture.activeOffsetY(activeOffset);\n        }\n    }\n\n    const onScroll = useStableCallback((scrollOffset: number) => {\n        props.onScrollOffsetChange?.(scrollOffset);\n    });\n\n    const scrollHandler = useAnimatedScrollHandler(\n        {\n            onScroll: (evt) => {\n                scrollOffset.value = horizontalAnim.value\n                    ? evt.contentOffset.x\n                    : evt.contentOffset.y;\n                runOnJS(onScroll)(scrollOffset.value);\n            },\n        },\n        [horizontalAnim]\n    );\n\n    useAutoScroll();\n\n    const onViewableItemsChanged = useStableCallback<\n        OnViewableItemsChangedCallback<T>\n    >((info) => {\n        const viewableIndices = info.viewableItems\n            .filter((item) => item.isViewable)\n            .map((item) => item.index)\n            .filter((index): index is number => typeof index === \"number\");\n\n        const min = Math.min(...viewableIndices);\n        const max = Math.max(...viewableIndices);\n        viewableIndexMin.value = min;\n        viewableIndexMax.value = max;\n        props.onViewableItemsChanged?.(info);\n    });\n\n    return (\n        <DraggableFlatListProvider\n            activeKey={activeKey}\n            keyExtractor={keyExtractor}\n            horizontal={!!props.horizontal}\n            layoutAnimationDisabled={layoutAnimationDisabled}\n        >\n            <GestureDetector gesture={panGesture}>\n                <Animated.View\n                    style={props.containerStyle}\n                    ref={containerRef}\n                    onLayout={onContainerLayout}\n                >\n                    {props.renderPlaceholder && (\n                        <PlaceholderItem\n                            renderPlaceholder={props.renderPlaceholder}\n                        />\n                    )}\n                    <AnimatedFlatList\n                        {...props}\n                        data={props.data}\n                        onViewableItemsChanged={onViewableItemsChanged}\n                        CellRendererComponent={CellRendererComponent}\n                        ref={flatlistRef}\n                        onContentSizeChange={onListContentSizeChange}\n                        scrollEnabled={!activeKey && scrollEnabled}\n                        renderItem={renderItem}\n                        extraData={extraData}\n                        keyExtractor={keyExtractor}\n                        onScroll={scrollHandler}\n                        scrollEventThrottle={16}\n                        simultaneousHandlers={props.simultaneousHandlers}\n                        removeClippedSubviews={false}\n                        estimatedItemSize={props.estimatedItemSize}\n                    />\n                    {!!props.onScrollOffsetChange && (\n                        <ScrollOffsetListener\n                            onScrollOffsetChange={props.onScrollOffsetChange}\n                            scrollOffset={scrollOffset}\n                        />\n                    )}\n                </Animated.View>\n            </GestureDetector>\n        </DraggableFlatListProvider>\n    );\n}\n\nfunction DraggableFlatList<T>(\n    props: DraggableFlatListProps<T>,\n    ref?: React.ForwardedRef<FlashList<T>> | null\n) {\n    return (\n        <PropsProvider {...props}>\n            <AnimatedValueProvider>\n                <RefProvider flatListRef={ref}>\n                    <MemoizedInner {...props} />\n                </RefProvider>\n            </AnimatedValueProvider>\n        </PropsProvider>\n    );\n}\n\nconst MemoizedInner = typedMemo(DraggableFlatListInner);\n\n// Generic forwarded ref type assertion taken from:\n// https://fettblog.eu/typescript-react-generic-forward-refs/#option-1%3A-type-assertion\nexport default React.forwardRef(DraggableFlatList) as <T>(\n    props: DraggableFlatListProps<T> & {\n        ref?: React.ForwardedRef<FlashList<T>>;\n    }\n) => ReturnType<typeof DraggableFlatList>;\n"],"mappings":"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"}