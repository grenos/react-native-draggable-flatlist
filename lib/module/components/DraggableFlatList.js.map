{"version":3,"names":["React","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","Gesture","GestureDetector","Animated","runOnJS","useAnimatedReaction","useAnimatedScrollHandler","useSharedValue","withSpring","CellRendererComponent","DEFAULT_PROPS","PlaceholderItem","RowItem","PropsProvider","AnimatedValueProvider","useAnimatedValues","RefProvider","useRefs","DraggableFlatListProvider","useAutoScroll","useStableCallback","ScrollOffsetListener","typedMemo","FlashList","AnimatedFlatList","createAnimatedComponent","DraggableFlatListInner","props","cellDataRef","containerRef","flatlistRef","keyToIndexRef","propsRef","animationConfigRef","activeCellOffset","activeCellSize","activeIndexAnim","containerSize","scrollOffset","scrollViewSize","spacerIndexAnim","horizontalAnim","placeholderOffset","touchTranslate","autoScrollDistance","panGestureState","isTouchActiveNative","viewableIndexMin","viewableIndexMax","disabled","reset","value","setActiveKey","dragHitSlop","scrollEnabled","activationDistance","activationDistanceProp","activeKey","layoutAnimationDisabled","setLayoutAnimationDisabled","current","enableLayoutAnimationExperimental","keyExtractor","item","index","Error","dataRef","data","dataHasChanged","map","join","setTimeout","forEach","d","i","key","set","drag","get","cellData","measurements","offset","size","onDragBegin","undefined","onContainerLayout","nativeEvent","layout","width","height","horizontal","onListContentSizeChange","w","h","onContentSizeChange","onContainerTouchStart","onContainerTouchEnd","extraData","renderItem","onRelease","onDragEnd","from","to","newData","splice","onPlaceholderIndexChange","cur","prev","hasMoved","gestureDisabled","panGesture","Pan","onBegin","evt","state","onUpdate","translation","translationX","translationY","onEnd","springTo","onTouchesDown","onTouchesUp","hitSlop","activeOffset","activeOffsetX","activeOffsetY","onScroll","onScrollOffsetChange","scrollHandler","contentOffset","x","y","onViewableItemsChanged","info","viewableIndices","viewableItems","filter","isViewable","min","Math","max","containerStyle","renderPlaceholder","simultaneousHandlers","estimatedItemSize","DraggableFlatList","ref","MemoizedInner","forwardRef"],"sources":["DraggableFlatList.tsx"],"sourcesContent":["import React, {\n    useCallback,\n    useEffect,\n    useLayoutEffect,\n    useMemo,\n    useRef,\n    useState,\n} from \"react\";\nimport { LayoutChangeEvent } from \"react-native\";\nimport { Gesture, GestureDetector } from \"react-native-gesture-handler\";\nimport Animated, {\n    runOnJS,\n    useAnimatedReaction,\n    useAnimatedScrollHandler,\n    useSharedValue,\n    withSpring,\n} from \"react-native-reanimated\";\nimport CellRendererComponent from \"./CellRendererComponent\";\nimport { DEFAULT_PROPS, isWeb } from \"../constants\";\nimport PlaceholderItem from \"./PlaceholderItem\";\nimport RowItem from \"./RowItem\";\nimport { DraggableFlatListProps } from \"../types\";\nimport PropsProvider from \"../context/propsContext\";\nimport AnimatedValueProvider, {\n    useAnimatedValues,\n} from \"../context/animatedValueContext\";\nimport RefProvider, { useRefs } from \"../context/refContext\";\nimport DraggableFlatListProvider from \"../context/draggableFlatListContext\";\nimport { useAutoScroll } from \"../hooks/useAutoScroll\";\nimport { useStableCallback } from \"../hooks/useStableCallback\";\nimport ScrollOffsetListener from \"./ScrollOffsetListener\";\nimport { typedMemo } from \"../utils\";\nimport { FlashList, FlashListProps, ListRenderItem } from \"@shopify/flash-list\";\n\ntype RNGHFlatListProps<T> = Animated.AnimateProps<\n    FlashListProps<T> & {\n        ref: React.Ref<FlashList<T>>;\n        simultaneousHandlers?: React.Ref<any> | React.Ref<any>[];\n    }\n>;\n\ntype OnViewableItemsChangedCallback<T> = Exclude<\n    FlashListProps<T>[\"onViewableItemsChanged\"],\n    undefined | null\n>;\n\nconst AnimatedFlatList = (Animated.createAnimatedComponent(\n    FlashList\n) as unknown) as <T>(props: RNGHFlatListProps<T>) => React.ReactElement;\n\nfunction DraggableFlatListInner<T>(props: DraggableFlatListProps<T>) {\n    const {\n        cellDataRef,\n        containerRef,\n        flatlistRef,\n        keyToIndexRef,\n        propsRef,\n        animationConfigRef,\n    } = useRefs<T>();\n    const {\n        activeCellOffset,\n        activeCellSize,\n        activeIndexAnim,\n        containerSize,\n        scrollOffset,\n        scrollViewSize,\n        spacerIndexAnim,\n        horizontalAnim,\n        placeholderOffset,\n        touchTranslate,\n        autoScrollDistance,\n        panGestureState,\n        isTouchActiveNative,\n        viewableIndexMin,\n        viewableIndexMax,\n        disabled,\n    } = useAnimatedValues();\n\n    const reset = useStableCallback(() => {\n        activeIndexAnim.value = -1;\n        spacerIndexAnim.value = -1;\n        touchTranslate.value = 0;\n        activeCellSize.value = -1;\n        activeCellOffset.value = -1;\n        setActiveKey(null);\n    });\n\n    const {\n        dragHitSlop = DEFAULT_PROPS.dragHitSlop,\n        scrollEnabled = DEFAULT_PROPS.scrollEnabled,\n        activationDistance: activationDistanceProp = DEFAULT_PROPS.activationDistance,\n    } = props;\n\n    let [activeKey, setActiveKey] = useState<string | null>(null);\n    const [layoutAnimationDisabled, setLayoutAnimationDisabled] = useState(\n        !propsRef.current.enableLayoutAnimationExperimental\n    );\n\n    const keyExtractor = useStableCallback((item: T, index: number) => {\n        if (!props.keyExtractor) {\n            throw new Error(\n                \"You must provide a keyExtractor to DraggableFlatList\"\n            );\n        }\n        return props.keyExtractor(item, index);\n    });\n\n    const dataRef = useRef(props.data);\n    const dataHasChanged =\n        dataRef.current.map(keyExtractor).join(\"\") !==\n        props.data.map(keyExtractor).join(\"\");\n    dataRef.current = props.data;\n    if (dataHasChanged) {\n        // When data changes make sure `activeKey` is nulled out in the same render pass\n        activeKey = null;\n    }\n\n    useEffect(() => {\n        if (!propsRef.current.enableLayoutAnimationExperimental) return;\n        if (activeKey) {\n            setLayoutAnimationDisabled(true);\n        } else {\n            // setTimeout result of trial-and-error to determine how long to wait before\n            // re-enabling layout animations so that a drag reorder does not trigger it.\n            setTimeout(() => {\n                setLayoutAnimationDisabled(false);\n            }, 100);\n        }\n    }, [activeKey]);\n\n    useLayoutEffect(() => {\n        props.data.forEach((d, i) => {\n            const key = keyExtractor(d, i);\n            keyToIndexRef.current.set(key, i);\n        });\n    }, [props.data, keyExtractor, keyToIndexRef]);\n\n    const drag = useStableCallback((activeKey: string) => {\n        if (disabled.value) return;\n        const index = keyToIndexRef.current.get(activeKey);\n        const cellData = cellDataRef.current.get(activeKey);\n        if (cellData) {\n            activeCellOffset.value = cellData.measurements.offset;\n            activeCellSize.value = cellData.measurements.size;\n        }\n\n        const { onDragBegin } = propsRef.current;\n        if (index !== undefined) {\n            spacerIndexAnim.value = index;\n            activeIndexAnim.value = index;\n            setActiveKey(activeKey);\n            onDragBegin?.(index);\n        }\n    });\n\n    const onContainerLayout = ({\n        nativeEvent: { layout },\n    }: LayoutChangeEvent) => {\n        const { width, height } = layout;\n        containerSize.value = props.horizontal ? width : height;\n        props.onContainerLayout?.({ layout, containerRef });\n    };\n\n    const onListContentSizeChange = (w: number, h: number) => {\n        scrollViewSize.value = props.horizontal ? w : h;\n        props.onContentSizeChange?.(w, h);\n    };\n\n    const onContainerTouchStart = () => {\n        if (!disabled.value) {\n            isTouchActiveNative.value = true;\n        }\n        return false;\n    };\n\n    const onContainerTouchEnd = () => {\n        isTouchActiveNative.value = false;\n    };\n\n    const extraData = useMemo(\n        () => ({\n            activeKey,\n            extraData: props.extraData,\n        }),\n        [activeKey, props.extraData]\n    );\n\n    const renderItem: ListRenderItem<T> = useCallback(\n        ({ item, index }) => {\n            const key = keyExtractor(item, index);\n            if (index !== keyToIndexRef.current.get(key)) {\n                keyToIndexRef.current.set(key, index);\n            }\n\n            return (\n                <RowItem\n                    item={item}\n                    itemKey={key}\n                    renderItem={props.renderItem}\n                    drag={drag}\n                    extraData={props.extraData}\n                />\n            );\n        },\n        [props.renderItem, props.extraData, drag, keyExtractor]\n    );\n\n    const onRelease = useStableCallback((index: number) => {\n        props.onRelease?.(index);\n    });\n\n    const onDragEnd = useStableCallback(\n        ({ from, to }: { from: number; to: number }) => {\n            const { onDragEnd, data } = props;\n\n            const newData = [...data];\n            if (from !== to) {\n                newData.splice(from, 1);\n                newData.splice(to, 0, data[from]);\n            }\n\n            onDragEnd?.({ from, to, data: newData });\n            reset();\n        }\n    );\n\n    const onPlaceholderIndexChange = useStableCallback((index: number) => {\n        props.onPlaceholderIndexChange?.(index);\n    });\n\n    // Handle case where user ends drag without moving their finger.\n    useAnimatedReaction(\n        () => {\n            return isTouchActiveNative.value;\n        },\n        (cur, prev) => {\n            if (cur !== prev && !cur) {\n                const hasMoved = !!touchTranslate.value;\n                if (\n                    !hasMoved &&\n                    activeIndexAnim.value >= 0 &&\n                    !disabled.value\n                ) {\n                    runOnJS(onRelease)(activeIndexAnim.value);\n                    runOnJS(onDragEnd)({\n                        from: activeIndexAnim.value,\n                        to: spacerIndexAnim.value,\n                    });\n                }\n            }\n        },\n        [isTouchActiveNative, onDragEnd, onRelease]\n    );\n\n    useAnimatedReaction(\n        () => {\n            return spacerIndexAnim.value;\n        },\n        (cur, prev) => {\n            if (prev !== null && cur !== prev && cur >= 0 && prev >= 0) {\n                runOnJS(onPlaceholderIndexChange)(cur);\n            }\n        },\n        [spacerIndexAnim]\n    );\n\n    const gestureDisabled = useSharedValue(false);\n\n    const panGesture = Gesture.Pan()\n        .onBegin((evt) => {\n            gestureDisabled.value = disabled.value;\n            if (gestureDisabled.value) return;\n            panGestureState.value = evt.state;\n        })\n        .onUpdate((evt) => {\n            if (gestureDisabled.value) return;\n            panGestureState.value = evt.state;\n            const translation = horizontalAnim.value\n                ? evt.translationX\n                : evt.translationY;\n            touchTranslate.value = translation;\n        })\n        .onEnd((evt) => {\n            if (gestureDisabled.value) return;\n            // Set touch val to current translate val\n            isTouchActiveNative.value = false;\n            const translation = horizontalAnim.value\n                ? evt.translationX\n                : evt.translationY;\n\n            touchTranslate.value = translation + autoScrollDistance.value;\n            panGestureState.value = evt.state;\n\n            // Only call onDragEnd if actually dragging a cell\n            if (activeIndexAnim.value === -1 || disabled.value) return;\n            disabled.value = true;\n            runOnJS(onRelease)(activeIndexAnim.value);\n            const springTo = placeholderOffset.value - activeCellOffset.value;\n            touchTranslate.value = withSpring(\n                springTo,\n                animationConfigRef.current,\n                () => {\n                    runOnJS(onDragEnd)({\n                        from: activeIndexAnim.value,\n                        to: spacerIndexAnim.value,\n                    });\n                    disabled.value = false;\n                }\n            );\n        })\n        .onTouchesDown(() => {\n            runOnJS(onContainerTouchStart)();\n        })\n        .onTouchesUp(() => {\n            // Turning this into a worklet causes timing issues. We want it to run\n            // just after the finger lifts.\n            runOnJS(onContainerTouchEnd)();\n        });\n\n    if (dragHitSlop) panGesture.hitSlop(dragHitSlop);\n    if (activationDistanceProp) {\n        const activeOffset = [-activationDistanceProp, activationDistanceProp];\n        if (props.horizontal) {\n            panGesture.activeOffsetX(activeOffset);\n        } else {\n            panGesture.activeOffsetY(activeOffset);\n        }\n    }\n\n    const onScroll = useStableCallback((scrollOffset: number) => {\n        props.onScrollOffsetChange?.(scrollOffset);\n    });\n\n    const scrollHandler = useAnimatedScrollHandler(\n        {\n            onScroll: (evt) => {\n                scrollOffset.value = horizontalAnim.value\n                    ? evt.contentOffset.x\n                    : evt.contentOffset.y;\n                runOnJS(onScroll)(scrollOffset.value);\n            },\n        },\n        [horizontalAnim]\n    );\n\n    useAutoScroll();\n\n    const onViewableItemsChanged = useStableCallback<\n        OnViewableItemsChangedCallback<T>\n    >((info) => {\n        const viewableIndices = info.viewableItems\n            .filter((item) => item.isViewable)\n            .map((item) => item.index)\n            .filter((index): index is number => typeof index === \"number\");\n\n        const min = Math.min(...viewableIndices);\n        const max = Math.max(...viewableIndices);\n        viewableIndexMin.value = min;\n        viewableIndexMax.value = max;\n        props.onViewableItemsChanged?.(info);\n    });\n\n    return (\n        <DraggableFlatListProvider\n            activeKey={activeKey}\n            keyExtractor={keyExtractor}\n            horizontal={!!props.horizontal}\n            layoutAnimationDisabled={layoutAnimationDisabled}\n        >\n            <GestureDetector gesture={panGesture}>\n                <Animated.View\n                    style={props.containerStyle}\n                    ref={containerRef}\n                    onLayout={onContainerLayout}\n                >\n                    {props.renderPlaceholder && (\n                        <PlaceholderItem\n                            renderPlaceholder={props.renderPlaceholder}\n                        />\n                    )}\n                    <AnimatedFlatList\n                        {...props}\n                        data={props.data}\n                        onViewableItemsChanged={onViewableItemsChanged}\n                        CellRendererComponent={CellRendererComponent}\n                        ref={flatlistRef}\n                        onContentSizeChange={onListContentSizeChange}\n                        scrollEnabled={!activeKey && scrollEnabled}\n                        renderItem={renderItem}\n                        extraData={extraData}\n                        keyExtractor={keyExtractor}\n                        onScroll={scrollHandler}\n                        scrollEventThrottle={16}\n                        simultaneousHandlers={props.simultaneousHandlers}\n                        removeClippedSubviews={false}\n                        estimatedItemSize={props.estimatedItemSize}\n                    />\n                    {!!props.onScrollOffsetChange && (\n                        <ScrollOffsetListener\n                            onScrollOffsetChange={props.onScrollOffsetChange}\n                            scrollOffset={scrollOffset}\n                        />\n                    )}\n                </Animated.View>\n            </GestureDetector>\n        </DraggableFlatListProvider>\n    );\n}\n\nfunction DraggableFlatList<T>(\n    props: DraggableFlatListProps<T>,\n    ref?: React.ForwardedRef<FlashList<T>> | null\n) {\n    return (\n        <PropsProvider {...props}>\n            <AnimatedValueProvider>\n                <RefProvider flatListRef={ref}>\n                    <MemoizedInner {...props} />\n                </RefProvider>\n            </AnimatedValueProvider>\n        </PropsProvider>\n    );\n}\n\nconst MemoizedInner = typedMemo(DraggableFlatListInner);\n\n// Generic forwarded ref type assertion taken from:\n// https://fettblog.eu/typescript-react-generic-forward-refs/#option-1%3A-type-assertion\nexport default React.forwardRef(DraggableFlatList) as <T>(\n    props: DraggableFlatListProps<T> & {\n        ref?: React.ForwardedRef<FlashList<T>>;\n    }\n) => ReturnType<typeof DraggableFlatList>;\n"],"mappings":"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"}